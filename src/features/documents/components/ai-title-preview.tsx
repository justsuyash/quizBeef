import React, { useState } from 'react'
import { Button } from '../../../components/ui/button'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../../components/ui/card'
import { Input } from '../../../components/ui/input'
import { Label } from '../../../components/ui/label'
import { Badge } from '../../../components/ui/badge'
import { Edit3, Check, X, Sparkles, FileText } from 'lucide-react'

interface AITitlePreviewProps {
  generatedTitle: string
  sourceType: string
  onConfirm: (finalTitle: string) => void
  onCancel: () => void
  isProcessing?: boolean
}

export function AITitlePreview({ 
  generatedTitle, 
  sourceType, 
  onConfirm, 
  onCancel, 
  isProcessing = false 
}: AITitlePreviewProps) {
  const [isEditing, setIsEditing] = useState(false)
  const [editedTitle, setEditedTitle] = useState(generatedTitle)

  const handleEdit = () => {
    setIsEditing(true)
    setEditedTitle(generatedTitle)
  }

  const handleSaveEdit = () => {
    setIsEditing(false)
    // No need to update generatedTitle here, just the local state
  }

  const handleCancelEdit = () => {
    setIsEditing(false)
    setEditedTitle(generatedTitle)
  }

  const handleConfirm = () => {
    onConfirm(isEditing ? editedTitle : generatedTitle)
  }

  const displayTitle = isEditing ? editedTitle : generatedTitle

  return (
    <Card className="max-w-2xl mx-auto">
      <CardHeader className="text-center">
        <div className="flex items-center justify-center gap-2 mb-2">
          <Sparkles className="w-5 h-5 text-yellow-500" />
          <CardTitle className="text-xl">AI Generated Title</CardTitle>
        </div>
        <CardDescription>
          Our AI analyzed your {sourceType.toLowerCase()} content and generated this title
        </CardDescription>
      </CardHeader>
      
      <CardContent className="space-y-6">
        {/* Title Display/Edit Section */}
        <div className="space-y-3">
          <div className="flex items-center justify-between">
            <Label className="text-sm font-medium">Document Title</Label>
            <Badge variant="secondary" className="gap-1">
              <FileText className="w-3 h-3" />
              {sourceType}
            </Badge>
          </div>
          
          {isEditing ? (
            <div className="space-y-3">
              <Input
                value={editedTitle}
                onChange={(e) => setEditedTitle(e.target.value)}
                placeholder="Enter document title"
                className="text-lg font-medium"
                autoFocus
              />
              <div className="flex gap-2">
                <Button
                  size="sm"
                  variant="outline"
                  onClick={handleSaveEdit}
                  className="gap-1"
                >
                  <Check className="w-3 h-3" />
                  Save
                </Button>
                <Button
                  size="sm"
                  variant="ghost"
                  onClick={handleCancelEdit}
                  className="gap-1"
                >
                  <X className="w-3 h-3" />
                  Cancel
                </Button>
              </div>
            </div>
          ) : (
            <div className="flex items-center justify-between bg-muted/50 rounded-lg p-4">
              <h3 className="text-lg font-medium flex-1 pr-4">
                {displayTitle}
              </h3>
              <Button
                size="sm"
                variant="ghost"
                onClick={handleEdit}
                className="gap-1 text-muted-foreground hover:text-foreground"
              >
                <Edit3 className="w-3 h-3" />
                Edit
              </Button>
            </div>
          )}
        </div>

        {/* AI Generation Info */}
        <div className="bg-blue-50 dark:bg-blue-950/30 rounded-lg p-4">
          <div className="flex items-start gap-3">
            <Sparkles className="w-4 h-4 text-blue-500 mt-0.5" />
            <div className="space-y-1">
              <p className="text-sm font-medium text-blue-900 dark:text-blue-100">
                AI Analysis Complete
              </p>
              <p className="text-xs text-blue-700 dark:text-blue-300">
                This title was generated by analyzing your content's main topics and themes. 
                You can edit it or use it as-is.
              </p>
            </div>
          </div>
        </div>

        {/* Action Buttons */}
        <div className="flex gap-3 pt-4">
          <Button
            onClick={handleConfirm}
            disabled={isProcessing || (isEditing && !editedTitle.trim())}
            className="flex-1"
          >
            {isProcessing ? (
              <>
                <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2" />
                Processing...
              </>
            ) : (
              <>
                <Check className="w-4 h-4 mr-2" />
                Create Document
              </>
            )}
          </Button>
          <Button
            variant="outline"
            onClick={onCancel}
            disabled={isProcessing}
          >
            <X className="w-4 h-4 mr-2" />
            Cancel
          </Button>
        </div>
      </CardContent>
    </Card>
  )
}
